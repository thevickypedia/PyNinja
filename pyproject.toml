[project]
name = "PyNinja"
dynamic = ["version", "dependencies"]
description = "Lightweight OS-agnostic service monitoring API"
readme = "README.md"
authors = [{ name = "Vignesh Rao", email = "svignesh1793@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Topic :: System :: Monitoring",
]
keywords = ["service-monitor", "PyNinja"]
requires-python = ">=3.11"

[tool.setuptools]
packages = [
    "pyninja",
    "pyninja.routes",
    "pyninja.monitor",
    "pyninja.modules",
    "pyninja.multifactor",
    "pyninja.features",
    "pyninja.executors",
    "pyninja.modules.templates.api",
    "pyninja.modules.templates.monitor",
]
[tool.setuptools.package-data]
"pyninja.modules.templates.monitor" = ["*.html"]
"pyninja.modules.templates.api" = ["*.js", "*.html"]

[tool.setuptools.dynamic]
version = { attr = "pyninja.version.__version__" }
dependencies = { file = ["requirements.txt"] }

[project.optional-dependencies]
dev = [
    "sphinx==5.1.1",
    "pre-commit",
    "recommonmark",
    "gitverse",
    "aiohttp==3.12.*",
    "python-dotenv==1.1.*",
    "tqdm==4.67.*",
    "requests==2.*"
]

[project.scripts]
# sends all the args to commandline function, where the arbitary commands as processed accordingly
pyninja = "pyninja:commandline"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project.urls]
Homepage = "https://github.com/thevickypedia/PyNinja"
Docs = "https://thevickypedia.github.io/PyNinja"
Source = "https://github.com/thevickypedia/PyNinja"
"Bug Tracker" = "https://github.com/thevickypedia/PyNinja/issues"
"Release Notes" = "https://github.com/thevickypedia/PyNinja/blob/main/release_notes.rst"
